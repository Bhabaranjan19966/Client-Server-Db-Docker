{"version":3,"sources":["gitlab.png","App.js","components/HomePageComponent.js","components/ListUrlComponent.js","components/AddGitURL.js","routers/AppRouter.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","App","env","HPORT","console","log","fetch","method","headers","Accept","Content-Type","body","then","res","json","react_default","a","createElement","className","src","logo","alt","id","href","Component","HomePageComponent","AppBar_default","position","Toolbar_default","Link","to","IconButton_default","color","aria-label","Home_default","Typography_default","variant","withStyles","theme","card","maxWidth","marginTop","media","height","paddingTop","actions","display","expand","Object","defineProperty","transform","transition","transitions","create","duration","shortest","marginLeft","breakpoints","up","marginRight","expandOpen","avatar","backgroundColor","checkCircle","props","classes","components_HomePageComponent","map","x","root","Card_default","CardHeader_default","Avatar_default","CheckCircle_default","title","subheader","Rx","require","filter","AddGitURL","token","queryString","parse","this","location","search","window","localStorage","setItem","history","push","fromEvent","document","getElementById","pipe","value","data","subscribe","Paper_default","elevation","text","TextField_default","label","textField","type","name","autoComplete","margin","Button_default","button","objectSpread","mixins","gutters","width","margin-top","container","flexWrap","spacing","unit","dense","menu","flex-direction","justify-content","align-items","text-align","min-height","AppRouter","HashRouter","Route","path","component","exact","Switch","ListUrlComponent","Boolean","hostname","match","ReactDOM","render","routers_AppRouter","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0ad1cefb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/gitlab.11d38b71.png\";","import React, { Component } from 'react';\nimport logo from './gitlab.png';\nimport './App.css';\n\n\nclass App extends Component {\n\n  test() {\n    console.log(\"clicked\");\n    const url = \"https://github.com/yravinderkumar33/portfolio.git\";\n    fetch(`/deploy`, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n      },\n      body: url\n    })\n      .then(res => { return res.json() })\n      .then(res => console.log(res))\n  }\n  env={\n    HPORT:5002,\n  }\n  render() {\n    \n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <a className=\"App-link\" id=\"loginButton\" href={`/auth`}> Connect to Gitlab </a>\n          {/* <button onClick={this.test}> test </button> */}\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/*eslint react/jsx-filename-extension: 0 */\n\nimport React from 'react';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport Home from '@material-ui/icons/Home';\nimport { Link } from 'react-router-dom';\n\nimport '../styling/homepage.css';\n\nfunction HomePageComponent() {\n  return (\n    <div className=\"root\">\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Link to={`/home`} className=\"lnk\">\n            <IconButton className=\"menuButton\" color=\"inherit\" aria-label=\"Menu\">\n              <Home />\n            </IconButton>\n          </Link>\n          <Typography variant=\"h6\" color=\"inherit\" className=\"grow\">\n            <Link to={`/listUrl`} className=\"lnk\"> App </Link>\n          </Typography>\n          <Typography variant=\"h6\" color=\"inherit\" className=\"grow\">\n            <Link to={`/newApp`} className=\"lnk\"> NewApp </Link>\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nexport default HomePageComponent;\n","/*eslint react/jsx-filename-extension: 0 */\n/*eslint react/prop-types: 0 */\n\nimport React from 'react';\n// import PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Avatar from '@material-ui/core/Avatar';\nimport CheckCircle from '@material-ui/icons/CheckCircle';\nimport HomePageComponent from './HomePageComponent'\n\n\n\nconst styles = theme => ({\n  card: {\n    maxWidth: '80%',\n    marginTop: '1%'\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%', // 16:9\n  },\n  actions: {\n    display: 'flex',\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n    marginLeft: 'auto',\n    [theme.breakpoints.up('sm')]: {\n      marginRight: -8,\n    },\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  avatar: {\n    backgroundColor: 'green'\n  },\n  checkCircle: {\n    height: '1.5em',\n  }\n});\n\nconst ListUrlComponent = (props) => {\n  // const token = queryString.parse(props.location.search).token;\n  // if (!token) {\n  //     window.localStorage.setItem(\"jwt\",token);\n  //     props.history.push(\"/\");\n  //  }\n  const { classes } = props;\n  const data = ['css', 'html', 'javascript', 'nodejs'];\n  return (\n    <div>\n      <HomePageComponent />\n      {data.map((x) =>\n          <div className={classes.root}>\n            <Card className={classes.card}>\n              <CardHeader\n                avatar={\n                  <Avatar aria-label=\"Recipe\" className={classes.avatar}>\n                    <CheckCircle className={classes.checkCircle} />\n                  </Avatar>\n                }\n                title={x}\n                subheader=\"September 14, 2016\"\n              />\n            </Card>\n          </div>\n        )\n      }\n    </div>\n  );\n}\n\nexport default withStyles(styles)(ListUrlComponent);\n","/*eslint react/jsx-filename-extension: 0 */\n/* eslint react/forbid-prop-types: 0 */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport HomePageComponent from './HomePageComponent'\nimport queryString from \"query-string\";\nconst Rx = require('rxjs');\nconst { filter, map } = require('rxjs/operators');\n\nconst styles = theme => ({\n    root: {\n        ...theme.mixins.gutters(),\n        width: '80%',\n        margin: 'auto',\n        'margin-top': '7%',\n\n    },\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    textField: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        width: '50vw'\n    },\n    dense: {\n        marginTop: 16,\n    },\n    menu: {\n        width: 200,\n    },\n\n    text: {\n        display: 'flex',\n        'flex-direction': 'column',\n        'justify-content': 'center',\n        'align-items': 'center',\n        'text-align': 'center',\n        'min-height': '50vh',\n    },\n    button: {\n        'margin-top': '2%',\n    },\n\n});\n\nclass AddGitURL extends Component {\n\n    componentDidMount() {\n        const token = queryString.parse(this.props.location.search).token;\n        if (!token) {\n            window.localStorage.setItem(\"jwt\",token);\n            this.props.history.push(\"/\");\n         }\n        Rx.fromEvent(document.getElementById(\"outlined-email-input\"), \"click\")\n            .pipe(map(() => {\n                return document.getElementById(\"outlined-email-input2\").value;\n            }),\n                filter((data) => {\n                    return data !== \"\"\n                }))\n            .subscribe((data) => {\n                console.log(\"data\", data);\n                const url = data;\n                fetch(`/deploy`, {\n                    method: 'POST',\n                    headers: {\n                        'Accept': 'application/json',\n                        \"Content-Type\": \"application/x-www-form-urlencoded\"\n                    },\n                    body: url\n                })\n                    .then(res => { return res.json() })\n                    .then(res => console.log(res))\n            })\n    }\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <div>\n            <HomePageComponent/>\n            <Paper className={classes.root} elevation={1}>\n                <div className={classes.text}>\n                    <TextField\n                        id=\"outlined-email-input2\"\n                        label=\"GitURL\"\n                        className={classes.textField}\n                        type=\"email\"\n                        name=\"email\"\n                        autoComplete=\"email\"\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                    />\n                    <Button variant=\"outlined\" color=\"primary\" className={classes.button} id=\"outlined-email-input\">\n                        Deploy\n                 </Button>\n                </div>\n            </Paper>\n            </div>\n        )\n    }\n}\n\nAddGitURL.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(AddGitURL);\n\n","/*eslint react/jsx-filename-extension: 0 */\n\nimport React from 'react';\nimport { Route, Switch} from 'react-router-dom';\nimport App from '../App';\nimport ListUrlComponent from '../components/ListUrlComponent';\nimport AddGitURL from '../components/AddGitURL';\nimport HomePageComponent from '../components/HomePageComponent';\nimport { HashRouter } from 'react-router-dom'\n\nfunction AppRouter () {\n   return ( <HashRouter>\n    <div>\n        <Route  path='/' component={App} exact={true} />\n        <Switch>\n            <Route  path='/home'  component={HomePageComponent}  />\n            <Route  path='/listUrl'  component={ListUrlComponent} />\n            <Route  path='/newApp'  component={AddGitURL} />\n        </Switch>\n    </div>\n    </HashRouter>)\n}\nexport default AppRouter;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport AppRouter from './routers/AppRouter';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<AppRouter />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}